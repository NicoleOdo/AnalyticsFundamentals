<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on NicoleOdo - Fundamentals of Analytics</title>
    <link>/post/</link>
    <description>Recent content in Posts on NicoleOdo - Fundamentals of Analytics</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 10 Jun 2021 00:00:00 +0000</lastBuildDate><atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A04: Shiny App</title>
      <link>/2021/06/10/a04-shiny-app/</link>
      <pubDate>Thu, 10 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/06/10/a04-shiny-app/</guid>
      <description>  Level 1 Math Test Results Obtained in New York State This interactive visualization allows us to explore the New York State Mathematics Tests results from years 2006 to 2011. Here we are specifically interested in understanding the percent of students that obtained a Level 1 test result, and further explore the results by observing by grade level, year and category of student.
  </description>
    </item>
    
    <item>
      <title>A04: Shiny App vs</title>
      <link>/2021/06/10/a04-shiny-app-vs/</link>
      <pubDate>Thu, 10 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/06/10/a04-shiny-app-vs/</guid>
      <description>  Level 1 Math Test Results Obtained in New York State  </description>
    </item>
    
    <item>
      <title>2021-06-06</title>
      <link>/2021/06/08/2021-06-06/</link>
      <pubDate>Tue, 08 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/06/08/2021-06-06/</guid>
      <description>  Covid Speeches of UK and Scotland library(shiny) &amp;lt;iframe height=&amp;quot;800&amp;quot; width=&amp;quot;100%&amp;quot; frameborder=&amp;quot;no&amp;quot; src=&amp;quot;https://nicoleodo.shinyapps.io/AnalyticsFundamentals/&amp;quot;&amp;gt; &amp;lt;/iframe&amp;gt;  </description>
    </item>
    
    <item>
      <title>2021-06-08 Exercise 1</title>
      <link>/2021/06/08/exercise-1/</link>
      <pubDate>Tue, 08 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/06/08/exercise-1/</guid>
      <description># load libraries library(shiny) library(tidyverse)  ## ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ── ## ✓ ggplot2 3.3.3 ✓ purrr 0.3.4 ## ✓ tibble 3.1.2 ✓ dplyr 1.0.6 ## ✓ tidyr 1.1.3 ✓ stringr 1.4.0 ## ✓ readr 1.4.0 ✓ forcats 0.5.1 ## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── ## x dplyr::filter() masks stats::filter() ## x dplyr::lag() masks stats::lag() library(tidytext) library(glue)  ## ## Attaching package: &amp;#39;glue&amp;#39; ## The following object is masked from &amp;#39;package:dplyr&amp;#39;: ## ## collapse library(plotly) ## ## Attaching package: &amp;#39;plotly&amp;#39; ## The following object is masked from &amp;#39;package:ggplot2&amp;#39;: ## ## last_plot ## The following object is masked from &amp;#39;package:stats&amp;#39;: ## ## filter ## The following object is masked from &amp;#39;package:graphics&amp;#39;: ## ## layout library(shiny) #read data covid_speeches_words &amp;lt;- read_rds(&amp;quot;covid-speeches-words.</description>
    </item>
    
    <item>
      <title>A03</title>
      <link>/2021/06/03/a03/</link>
      <pubDate>Thu, 03 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/06/03/a03/</guid>
      <description>We are exploring a data set that summarizes lego sales. It provides an information on who the customer was, their age, what theme of lego they bought, price, and several other variables. This allows us to analyze the data for trends and to gain insight into commonly purchased lego sets.
1. What are the three most common first names of customers? ## # A tibble: 211 x 2 ## first_name n ## &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt; ## 1 Jackson 13 ## 2 Jacob 11 ## 3 Joseph 11 ## 4 Michael 10 ## 5 Audrey 8 ## 6 Connor 8 ## 7 Kaitlyn 8 ## 8 Lucas 8 ## 9 Amanda 7 ## 10 Joshua 7 ## # … with 201 more rows The three most common first names are Jackson, Jacob and Joseph.</description>
    </item>
    
    <item>
      <title>Exercise 1: Data Types</title>
      <link>/2021/06/01/exercise-1-june-1/</link>
      <pubDate>Tue, 01 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/06/01/exercise-1-june-1/</guid>
      <description>Import Nobel.csv File library(tidyverse) ## ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ── ## ✓ ggplot2 3.3.3 ✓ purrr 0.3.4 ## ✓ tibble 3.1.2 ✓ dplyr 1.0.6 ## ✓ tidyr 1.1.3 ✓ stringr 1.4.0 ## ✓ readr 1.4.0 ✓ forcats 0.5.1 ## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── ## x dplyr::filter() masks stats::filter() ## x dplyr::lag() masks stats::lag() nobel &amp;lt;- read_csv(file = &amp;quot;nobel.csv&amp;quot;) ## ## ── Column specification ──────────────────────────────────────────────────────── ## cols( ## .</description>
    </item>
    
    <item>
      <title>Exercise 2: Data Classes</title>
      <link>/2021/06/01/exercise-2-june-1/</link>
      <pubDate>Tue, 01 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/06/01/exercise-2-june-1/</guid>
      <description>library(tidyverse) ## ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ── ## ✓ ggplot2 3.3.3 ✓ purrr 0.3.4 ## ✓ tibble 3.1.2 ✓ dplyr 1.0.6 ## ✓ tidyr 1.1.3 ✓ stringr 1.4.0 ## ✓ readr 1.4.0 ✓ forcats 0.5.1 ## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── ## x dplyr::filter() masks stats::filter() ## x dplyr::lag() masks stats::lag() cat_lovers &amp;lt;- read_csv(&amp;quot;cat-lovers.csv&amp;quot;) ## ## ── Column specification ──────────────────────────────────────────────────────── ## cols( ## name = col_character(), ## number_of_cats = col_character(), ## handedness = col_character() ## ) hotels &amp;lt;- read_csv(&amp;quot;hotels.</description>
    </item>
    
    <item>
      <title>Exercise 3: Data Import</title>
      <link>/2021/06/01/exercise-1/</link>
      <pubDate>Tue, 01 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/06/01/exercise-1/</guid>
      <description>library(tidyverse) ## ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ── ## ✓ ggplot2 3.3.3 ✓ purrr 0.3.4 ## ✓ tibble 3.1.2 ✓ dplyr 1.0.6 ## ✓ tidyr 1.1.3 ✓ stringr 1.4.0 ## ✓ readr 1.4.0 ✓ forcats 0.5.1 ## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── ## x dplyr::filter() masks stats::filter() ## x dplyr::lag() masks stats::lag() cat_lovers &amp;lt;- read_csv(&amp;quot;cat-lovers.csv&amp;quot;) ## ## ── Column specification ──────────────────────────────────────────────────────── ## cols( ## name = col_character(), ## number_of_cats = col_character(), ## handedness = col_character() ## ) glimpse(cat_lovers) ## Rows: 60 ## Columns: 3 ## $ name &amp;lt;chr&amp;gt; &amp;quot;Bernice Warren&amp;quot;, &amp;quot;Woodrow Stone&amp;quot;, &amp;quot;Willie Bass&amp;quot;, &amp;quot;Tyro… ## $ number_of_cats &amp;lt;chr&amp;gt; &amp;quot;0&amp;quot;, &amp;quot;0&amp;quot;, &amp;quot;1&amp;quot;, &amp;quot;3&amp;quot;, &amp;quot;3&amp;quot;, &amp;quot;2&amp;quot;, &amp;quot;1&amp;quot;, &amp;quot;1&amp;quot;, &amp;quot;0&amp;quot;, &amp;quot;0&amp;quot;, &amp;quot;0&amp;quot;, … ## $ handedness &amp;lt;chr&amp;gt; &amp;quot;left&amp;quot;, &amp;quot;left&amp;quot;, &amp;quot;left&amp;quot;, &amp;quot;left&amp;quot;, &amp;quot;left&amp;quot;, &amp;quot;left&amp;quot;, &amp;quot;left&amp;quot;,… cat_lovers %&amp;gt;% mutate(number_of_cats = case_when( name == &amp;quot;Ginger Clark&amp;quot; ~ 2, name == &amp;quot;Doug Bass&amp;quot; ~ 3, TRUE ~ as.</description>
    </item>
    
    <item>
      <title>Exercise 4: Data Recoding</title>
      <link>/2021/06/01/exercise-4-data-recoding/</link>
      <pubDate>Tue, 01 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/06/01/exercise-4-data-recoding/</guid>
      <description>Import and transform Religion data library(tidyverse) ## ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ── ## ✓ ggplot2 3.3.3 ✓ purrr 0.3.4 ## ✓ tibble 3.1.2 ✓ dplyr 1.0.6 ## ✓ tidyr 1.1.3 ✓ stringr 1.4.0 ## ✓ readr 1.4.0 ✓ forcats 0.5.1 ## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── ## x dplyr::filter() masks stats::filter() ## x dplyr::lag() masks stats::lag() library(readxl) rel_inc &amp;lt;- read_excel(&amp;quot;relig-income.xlsx&amp;quot;) rel_inc_long &amp;lt;- rel_inc %&amp;gt;% rename( religion = `Religious tradition`, n = `Sample Size` ) %&amp;gt;% pivot_longer( cols = -c(religion, n), # all but religion and n names_to = &amp;quot;income&amp;quot;, values_to = &amp;quot;proportion&amp;quot; ) %&amp;gt;% mutate(frequency = round(proportion * n)) rel_inc ## # A tibble: 12 x 6 ## `Religious tradition` `Less than $30,00… `$30,000-$49,99… `$50,000-$99,99… ## &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; ## 1 &amp;quot;Buddhist&amp;quot; 0.</description>
    </item>
    
    <item>
      <title>A02: TIDYVERSE</title>
      <link>/2021/05/27/a02-tidyverse/</link>
      <pubDate>Thu, 27 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/05/27/a02-tidyverse/</guid>
      <description>Introduction The data sets being explored in this assignment are derived from the World Happiness Report. The data is collected from a survey that determines the state of global happiness based on an overall score for each country. The report has been used by governments, organizations and civil societies, as they utilize this information to inform their policy making decisions.
This assignment has leveraged two data sets specifically:</description>
    </item>
    
    <item>
      <title>A01 Version 2</title>
      <link>/2021/05/26/a01-version-2/</link>
      <pubDate>Wed, 26 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/05/26/a01-version-2/</guid>
      <description>Data has been collected about chick weights based on the diets they are fed. In this assignment, we examine what results each diet type renders, which will assist in the decision making process when choosing a diet for the chicks.
Categorical Data Visualization:  Diet 1 has the most data collected
 Diet 2, 3 and 4 all have similar amounts of data collected
   Numerical Data Visualization: library(datasets) library(tidyverse) ggplot(ChickWeight, aes(x = weight, y=Diet)) + geom_boxplot()+labs(title=&amp;quot;Chick Weight Based on Diet&amp;quot;)  Diet 3 seems to result in the heaviest weights overall</description>
    </item>
    
    <item>
      <title>Fun with R</title>
      <link>/2021/05/26/fun-with-r/</link>
      <pubDate>Wed, 26 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/05/26/fun-with-r/</guid>
      <description>Variables and Numbers library(tidyverse) ## ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ── ## ✓ ggplot2 3.3.3 ✓ purrr 0.3.4 ## ✓ tibble 3.1.2 ✓ dplyr 1.0.6 ## ✓ tidyr 1.1.3 ✓ stringr 1.4.0 ## ✓ readr 1.4.0 ✓ forcats 0.5.1 ## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── ## x dplyr::filter() masks stats::filter() ## x dplyr::lag() masks stats::lag() x &amp;lt;- 1 y = 2 3 -&amp;gt; z x + y ## [1] 3 y*z ## [1] 6 y/x ## [1] 2  Vectors library(tidyverse) a &amp;lt;- 1:10 print(a) ## [1] 1 2 3 4 5 6 7 8 9 10 b &amp;lt;- 10:-4 print(b) ## [1] 10 9 8 7 6 5 4 3 2 1 0 -1 -2 -3 -4 class(a) ## [1] &amp;quot;integer&amp;quot; str(a) ## int [1:10] 1 2 3 4 5 6 7 8 9 10 # Accessing Vector Elements a[5] ## [1] 5 a[5:8] ## [1] 5 6 7 8 a[5:3] ## [1] 5 4 3 a[c(5,6,7,8)] ## [1] 5 6 7 8 # Tail and Head tail(a) #auto does 6 values ## [1] 5 6 7 8 9 10 tail(a,n=3)  ## [1] 8 9 10 tail(a,3) ## [1] 8 9 10 head(a) #auto does 6 values ## [1] 1 2 3 4 5 6 head(a,4) #picking up first 4 values ## [1] 1 2 3 4 tail(b,5) #picking up last 5 values ## [1] 0 -1 -2 -3 -4  Combine Operator for creating vectors When we create a vector with multiple data types, R coerces the vector to the most compatible data type</description>
    </item>
    
    <item>
      <title>Data Wrangling using Tidyverse</title>
      <link>/2021/05/25/data-wrangling-using-tidyverse/</link>
      <pubDate>Tue, 25 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/05/25/data-wrangling-using-tidyverse/</guid>
      <description>Import the Hotels.csv file # getwd() in the console will show your current working directory #can either put the CSV file directly into the post folder you&amp;#39;re working in OR Environment - Import Data Set - From Text(readr) library(tidyverse) ## ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ── ## ✓ ggplot2 3.3.3 ✓ purrr 0.3.4 ## ✓ tibble 3.1.2 ✓ dplyr 1.0.6 ## ✓ tidyr 1.1.3 ✓ stringr 1.4.0 ## ✓ readr 1.</description>
    </item>
    
    <item>
      <title>Exercise 3</title>
      <link>/2021/05/25/exercise-3/</link>
      <pubDate>Tue, 25 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/05/25/exercise-3/</guid>
      <description>library(tidyverse) ## ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ── ## ✓ ggplot2 3.3.3 ✓ purrr 0.3.4 ## ✓ tibble 3.1.2 ✓ dplyr 1.0.6 ## ✓ tidyr 1.1.3 ✓ stringr 1.4.0 ## ✓ readr 1.4.0 ✓ forcats 0.5.1 ## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── ## x dplyr::filter() masks stats::filter() ## x dplyr::lag() masks stats::lag() professions &amp;lt;- read_csv(&amp;quot;professions.csv&amp;quot;) ## ## ── Column specification ──────────────────────────────────────────────────────── ## cols( ## name = col_character(), ## profession = col_character() ## ) head(professions) ## # A tibble: 6 x 2 ## name profession ## &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; ## 1 Ada Lovelace Mathematician ## 2 Marie Curie Physicist and Chemist ## 3 Janaki Ammal Botanist ## 4 Chien-Shiung Wu Physicist ## 5 Katherine Johnson Mathematician ## 6 Rosalind Franklin Chemist dates &amp;lt;- read_csv(&amp;quot;dates.</description>
    </item>
    
    <item>
      <title>Exercise 4</title>
      <link>/2021/05/25/exercise-4/</link>
      <pubDate>Tue, 25 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/05/25/exercise-4/</guid>
      <description>Case study: Approval rating of Donald Trump library(tidyverse) ## ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ── ## ✓ ggplot2 3.3.3 ✓ purrr 0.3.4 ## ✓ tibble 3.1.2 ✓ dplyr 1.0.6 ## ✓ tidyr 1.1.3 ✓ stringr 1.4.0 ## ✓ readr 1.4.0 ✓ forcats 0.5.1 ## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── ## x dplyr::filter() masks stats::filter() ## x dplyr::lag() masks stats::lag() trump &amp;lt;- read_csv(&amp;quot;trump.csv&amp;quot;) ## ## ── Column specification ──────────────────────────────────────────────────────── ## cols( ## subgroup = col_character(), ## date = col_date(format = &amp;quot;&amp;quot;), ## approval = col_double(), ## disapproval = col_double() ## ) trump_longer &amp;lt;- trump %&amp;gt;% pivot_longer( cols = c(approval, disapproval), names_to = &amp;quot;rating_type&amp;quot;, values_to = &amp;quot;rating_value&amp;quot; ) trump_longer ## # A tibble: 5,404 x 4 ## subgroup date rating_type rating_value ## &amp;lt;chr&amp;gt; &amp;lt;date&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; ## 1 Voters 2020-10-04 approval 44.</description>
    </item>
    
    <item>
      <title>Fun with R</title>
      <link>/2021/05/25/fun-with-r/</link>
      <pubDate>Tue, 25 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/05/25/fun-with-r/</guid>
      <description>  </description>
    </item>
    
    <item>
      <title>Assignment A01: GGPLOT2</title>
      <link>/2021/05/19/assignment-a01-ggplot2/</link>
      <pubDate>Wed, 19 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/05/19/assignment-a01-ggplot2/</guid>
      <description>Categorical Data Visualization:  Diet 1 has the most data collected
 Diet 2, 3 and 4 all have similar amounts of data collected
   Numerical Data Visualization:  Diet 3 seems to result in the heaviest weights overall
 Diet 1 seems to result in the highest weights over
 Diet 1 and 2 have a number of outliers in their data
   Discussion This data set provides interesting insight into chick weight based on the diet they are fed.</description>
    </item>
    
    <item>
      <title>Data and Visualization</title>
      <link>/2021/05/18/data-and-visualization/</link>
      <pubDate>Tue, 18 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/05/18/data-and-visualization/</guid>
      <description>Data Visualization Exercise library(dplyr) starwars ## # A tibble: 87 x 14 ## name height mass hair_color skin_color eye_color birth_year sex gender ## &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; ## 1 Luke S… 172 77 blond fair blue 19 male mascu… ## 2 C-3PO 167 75 &amp;lt;NA&amp;gt; gold yellow 112 none mascu… ## 3 R2-D2 96 32 &amp;lt;NA&amp;gt; white, bl… red 33 none mascu… ## 4 Darth … 202 136 none white yellow 41.</description>
    </item>
    
    <item>
      <title>Data Visualization using ggplot2</title>
      <link>/2021/05/18/data-visualization-using-ggplot2/</link>
      <pubDate>Tue, 18 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/05/18/data-visualization-using-ggplot2/</guid>
      <description>  Palmer Penguins Data Visualization  item 1 item 2   </description>
    </item>
    
    <item>
      <title>Visualising categorical data</title>
      <link>/2021/05/18/visualising-categorical-data/</link>
      <pubDate>Tue, 18 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/05/18/visualising-categorical-data/</guid>
      <description>Bar plot library(openintro) ## Loading required package: airports ## Loading required package: cherryblossom ## Loading required package: usdata library(tidyverse) ## ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ── ## ✓ ggplot2 3.3.3 ✓ purrr 0.3.4 ## ✓ tibble 3.1.2 ✓ dplyr 1.0.6 ## ✓ tidyr 1.1.3 ✓ stringr 1.4.0 ## ✓ readr 1.4.0 ✓ forcats 0.5.1 ## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── ## x dplyr::filter() masks stats::filter() ## x dplyr::lag() masks stats::lag() loans &amp;lt;- loans_full_schema %&amp;gt;% select(loan_amount, interest_rate, term, grade, state, annual_income, homeownership, debt_to_income) glimpse(loans) ## Rows: 10,000 ## Columns: 8 ## $ loan_amount &amp;lt;int&amp;gt; 28000, 5000, 2000, 21600, 23000, 5000, 24000, 20000, 20… ## $ interest_rate &amp;lt;dbl&amp;gt; 14.</description>
    </item>
    
    <item>
      <title>Visualizing Numerical Data</title>
      <link>/2021/05/18/visualizing-numerical-data/</link>
      <pubDate>Tue, 18 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/05/18/visualizing-numerical-data/</guid>
      <description>Histogram ## Rows: 10,000 ## Columns: 55 ## $ emp_title &amp;lt;chr&amp;gt; &amp;quot;global config engineer &amp;quot;, &amp;quot;warehouse… ## $ emp_length &amp;lt;dbl&amp;gt; 3, 10, 3, 1, 10, NA, 10, 10, 10, 3, 1… ## $ state &amp;lt;fct&amp;gt; NJ, HI, WI, PA, CA, KY, MI, AZ, NV, I… ## $ homeownership &amp;lt;fct&amp;gt; MORTGAGE, RENT, RENT, RENT, RENT, OWN… ## $ annual_income &amp;lt;dbl&amp;gt; 90000, 40000, 40000, 30000, 35000, 34… ## $ verified_income &amp;lt;fct&amp;gt; Verified, Not Verified, Source Verifi… ## $ debt_to_income &amp;lt;dbl&amp;gt; 18.</description>
    </item>
    
  </channel>
</rss>
